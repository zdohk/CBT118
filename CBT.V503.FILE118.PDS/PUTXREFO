******************************************************************  ***
**********       PUTXREF - SMP FORFMID TOOL           ************  ***
******************************************************************  ***
*                                                                   ***
*  PUTXREF PROGRAM - PRODUCE A REPORT SORTING ANY SYSMODS ON        ***
*    A PUT TAPE OR APAR TAPE OR ANY SMPPTFIN FILE BY FMID.          ***
*                                                                   ***
******************************************************************  ***
*                                                                   ***
*  ORIGINAL AUTHOR   -   JERRY LAWSON                               ***
*                                                                   ***
******************************************************************  ***
*                                                                   ***
*        JERRY LAWSON'S DOCUMENTATION                               ***
*                                                                   ***
*        JERRY LAWSON  860-547-5000 EXT 2960                        ***
*        HARTFORD INSURANCE GROUP,                                  ***
*        690 ASYLUM AVE.                                            ***
*        HARTFORD, CT.  06115                                       ***
*                                                                   ***
*        ORIGINAL FUNCTION (BEFORE EXTRA DD NAMES WERE ADDED)       ***
*                                                                   ***
*        THIS PROGRAM TAKES THE PUT PTF FILE (FILE 1 FROM A         ***
*        STANDARD IBM PUT TAPE), AND PRODUCES A CROSS               ***
*        REFERENCE OF THE PTF'S INCLUDED, SORTED BY FMID.           ***
*        IT CAN TAKE CONCATENATED INPUT, BUT THE TAPE IDENTITY      ***
*        ON WHICH THE PTF IS FOUND WILL BE LOST.  THE PROGRAM       ***
*        SHOULD BE USEFUL TO QUICKLY IDENTIFY WHAT PTF'S            ***
*        ARE ON A GIVEN TAPE, WHAT FMID'S HAVE MAINTENANCE ON       ***
*        A TAPE, AND TO DOUBLE CHECK THE CROSS REFERENCE (IT        ***
*        LIES ONCE IN A WHILE.)                                     ***
*                                                                   ***
*        DEPENDENCIES:                                              ***
*                                                                   ***
*        1.    THIS PROGRAM HAS AN INVOKED INCORE SORT.             ***
*              IT LINKS TO THE ENTRY POINT OF "SORT".               ***
*              CHANGE THE LINK MACRO IF YOU DO NOT SUPPORT          ***
*              THAT NAME OR ALIAS.  YOU WILL NEED ABOUT             ***
*              300K FOR THE WHOLE PROGRAM AND SORT.                 ***
*                                                                   ***
*        2.    TITLES.  THIS FILE (FOR FMID TITLES) IS              ***
*              OPTIONAL.  IF NOT INCLUDED, YOU WILL GET A           ***
*              WARNING MESSAGE ON YOUR SYSOUT, AND NO TITLES.       ***
*                                                                   ***
******************************************************************  ***
*                                                                   ***
*  MODIFICATION RECORD - S. GOLOB -               - 06/20/01        ***
*                                                                   ***
*  MODIFIED JULY 13, '01  BY SAM GOLOB - LEVEL 005 -  TO PUT 40     ***
*    CHARACTERS IN THE TITLES INSTEAD OF 34....                     ***
*                                                                   ***
*  MODIFIED JUNE 20, '01  BY SAM GOLOB - LEVEL 005 -  TO PUT OUT    ***
*    ANOTHER OPTIONAL DDNAME, PDSATOUT, WHICH IS INPUT TO THE FREE  ***
*    PDS PROGRAM, TO PROVIDE CONTROL STATEMENTS ADDING ISPF STATS   ***
*    TO EACH PTF IN THE SMPPTS DATASET, WITH THE ISPF USERID FIELD  ***
*    CONTAINING THE FMID OF THE SYSMOD.                             ***
*                                                                   ***
*  MODIFIED JUNE 20, '01  BY SAM GOLOB - LEVEL 004 -  TO PUT OUT    ***
*    AN OPTIONAL DDNAME, SMPCOUT, WHICH IS FB-80, AND WHICH, IF     ***
*    PRESENT, WILL RECEIVE FILE OUTPUT IDENTICAL TO THAT PRODUCED   ***
*    BY THE SMPFMUPD OR SMPASUPD PROGRAMS.  THIS WILL ELIMINATE     ***
*    THE NEED FOR THE SMPFMUPD OR SMPASUPD PROGRAMS.                ***
*                                                                   ***
*  MODIFIED JUNE 13, '01  BY SAM GOLOB - LEVEL 002 -  TO PUT OUT    ***
*    FBA BLOCKED OUTPUT TO THE "PRINTER" DDNAME, NOT VBA UNBLOCKED. ***
*    SUITABLE FOR INPUT TO SMPASUPD, OR SMPFMUPD PROGRAMS.          ***
*                                                                   ***
*  MODIFIED APRIL 26, '88 BY SAM GOLOB                TO ONLY       ***
*    LOOK FOR FMID KEYWORD IF YOU'RE LEGITIMATELY WITHIN A ++VER    ***
*    STATEMENT.  LEFT ALL THE OTHER STUFF IN AS SAFETY CHECKS.      ***
*    PLEASE INFORM ME  ***OLOB@ATTGLOBAL.NET     IF THIS VERSION    ***
*    OF THE PROGRAM FAILS TO WORK.  (CODE CAN USE CLEANING UP.)     ***
*                                                                   ***
*  MODIFIED APRIL 25, '88 BY SAM GOLOB                TO FIX A FEW  ***
*    BUGS.  THE PROGRAM CAN NOW DETECT IF THE FMID KEYWORD IS IN    ***
*    A COMMENT AREA.  IT ALSO KNOWS THAT IN THE INSIDE OF JCLIN YOU ***
*    CAN'T TEST FOR A COMMENT AREA, AND IT WON'T TEST FOR AN FMID   ***
*    KEYWORD THERE EITHER.  ALSO FIXED BUG THAT 1ST CHARACTER       ***
*    OF THE FMID WAS CHOPPED OFF IF THERE WERE AN ODD NUMBER OF     ***
*    SPACES BETWEEN THE OPEN PAREN AFTER THE FMID KEYWORD, AND      ***
*    THE FIRST NON-BLANK.  ANOTHER BUG WAS THAT THE FMID KEYWORD    ***
*    IN A ++IF STATEMENT WAS IGNORED ONLY ON THE SAME LINE AS THE   ***
*    ++IF, BUT NOT ON THE FOLLOWING LINES UNDER THE ++IF'S CONTROL. ***
*                                                                   ***
*  MODIFIED JUNE 26, 1986 BY SAM GOLOB                TO LOOK AT    ***
*    ++APAR, ++USERMOD, AND ++FUNCTION IN ADDITION TO ++PTF.        ***
*    ( I WANT TO KNOW WHAT FMIDS MY APARS AND USERMODS BELONG TO! ) ***
*                                                                   ***
*  THIS CODE WAS OBTAINED FROM FILE 118 OF THE CBT MVS MODS TAPE,   ***
*    VERSION 260.  THE CODE THERE ONLY EXTRACTS PTFS.  I HAVE       ***
*    MODIFIED IT IN THIS VERSION TO RECOGNIZE APARS, USERMODS, AND  ***
*    FUNCTION SYSMODS ALSO.                                         ***
*                                                                   ***
*  MY ASSEMBLER PROGRAM, SMPASUPD, ON FILE 118 OF THE CBT TAPE      ***
*    CONVERTS THE OUTPUT OF THIS PROGRAM TO THE FORMAT:             ***
*    ./  ADD  NAME=FMIDNAM                                          ***
*          UZ11111  /*  FMID - FMIDNAM - FROM PUT TAPE - DATE  */   ***
*                                                                   ***
*    WHICH IS SUITABLE FOR INPUT TO AN SMP APPLY OR LIST            ***
*    JOB.  THIS GETS A "FORFMID" EFFECT, GOOD ON ANY VERSION        ***
*    OF SMP, BECAUSE IT'S ONLY DEPENDENT ON THE SMPPTFIN FILE,      ***
*    AND NOT ON THE VERSION OF SMP WHICH WILL PROCESS THAT FILE.    ***
*                                                                   ***
*    THE OLD COBOL PROGRAM ON FILE 118, SMPFMUPD, WORKS THE SAME.   ***
*    A DDNAME OF //SMPCOUT IN THIS PROGRAM, WILL PRODUCE THE SAME   ***
*    OUTPUT TOO.                                                    ***
*                                                                   ***
******************************************************************  ***
*********************************************************************
*
*    SET LINES PER PAGE VARIABLE, FOR PRINT CONTROL.
*
         GBLA  &LINEPPG,&LINELES
&LINEPPG SETA  60
&LINELES SETA  &LINEPPG-1
         GBLC  &LLEV
&LLEV    SETC  '005'
*
*********************************************************************
PUTXREF  CSECT                                                          00101
         YREGS
         USING *,R15
         B     EYECATCH
         DC    C'--- '            MAKE EYECATCHER VISIBLE
         DC    C'PUTXREF - FORFMID PROCESSING OF SMPPTFIN SYSMODS - '
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '
         DC    C'LEVEL &LLEV '
         DC    C'--- '            MAKE EYECATCHER VISIBLE
SAVE     DC    18F'0'                                                   00406
EYECATCH DS    0H             ENSURE ALIGNMENT
* ------
         STM   R14,R12,12(R13)                                          00102
         LR    R5,R1               SAVE PARM POINTER
         LA    R1,SAVE              NEW SAVE-AREA ADDR
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR
         LR    R13,R1               NEW SAVE AREA ADDRESS
         LR    R1,R5               RESTORE PARM POINTER
         DROP  R15
* ------
         USING PUTXREF,R12,R11,R10,R9    SET UP FOUR BASE REGISTERS     00104
         LR    R12,R15                                                  00103
         LR    R11,R12                   ENSURE HI ORDER BITS LOADED
         LA    R11,4095(,R12)
         LA    R11,1(R11)
         LA    R10,4095(,R11)
         LA    R10,1(R10)
         LA    R9,4095(,R10)
         LA    R9,1(R9)
***********************************************************************
* GET SYSTEM DATE AND TIME                                            *
***********************************************************************
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY
         OI    DATE+4,X'0F'
         UNPK  DATED,DATE
         OI    TIME+3,X'0F'
         UNPK  TIMED,TIME
*                          FILL HEADDATE AREA WITH INFO TO REUSE
*   --------               HEADDATE FORMAT IS MM/DD/YYYY  HH:MM:SS
         MVC   HEADDATE(2),DATED
         MVI   HEADDATE+2,C'/'
         MVC   HEADDATE+3(2),DATED+2
         MVI   HEADDATE+5,C'/'
         MVC   HEADDATE+6(4),DATED+4
         MVC   HEADDATE+12(2),TIMED
         MVI   HEADDATE+14,C':'
         MVC   HEADDATE+15(2),TIMED+2
         MVI   HEADDATE+17,C':'
         MVC   HEADDATE+18(2),TIMED+4
*   --------               HEADDAY  FORMAT IS MM/DD/YY
         MVC   HEADDAY(2),DATED
         MVI   HEADDAY+2,C'/'
         MVC   HEADDAY+3(2),DATED+2
         MVI   HEADDAY+5,C'/'
         MVC   HEADDAY+6(2),DATED+6
***********************************************************************
INITEM   DS    0H          OTHER INITIALIZATIONS
         MVC   BLANK,BLANK-1
***********************************************************************
* -- BELOW ----               SCAN THE TIOT FOR PRESENCE OF DDNAME -- *
*
*                             SMPCOUT DDNAME IS OPTIONAL
*                             PDSATOUT DDNAME IS OPTIONAL
TIOTSCAN DS    0H
         L     R5,16          R5=CVT                                     00415
         L     R5,0(,R5)      R5=TCB WORDS                               00416
         L     R5,4(,R5)      R5=MY TCB                                  00417
         L     R5,12(,R5)     R5=TIOT                                    00418
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          00419
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             00420
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        00421
         CLC   4(8,R5),SMPCOUT+40   SMPCOUT DDNAME THERE?                00422
         BNE   TIOTPDSA       NO                                         00423
         OI    FLAGSMPC,X'01'       SHOW PRESENCE OF SMPCOUT DD          00424
         B     TIOTNEXT       CONTINUE                                   00430
TIOTPDSA CLC   4(8,R5),PDSATOUT+40
         BNE   TIOTNEXT
         OI    FLAGSMPC,X'02'       SHOW PRESENCE OF PDSATOUT DD
         B     TIOTNEXT
TIOTNEXT SR    R3,R3                                                     00566
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      00567
         AR    R5,R3          R5=NEXT DD ENTRY                           00568
         B     TIOTLOOP       GO CHECK IT                                00569
TIOTSEND DS    0H
* -- ABOVE ----               SCAN THE TIOT FOR PRESENCE OF DDNAME -- *
***********************************************************************
         OPEN  (SYSIN,INPUT)                                            00109
         OPEN  (SORT,OUTPUT)                                            00110
         SPACE 2                                                        00111
*---------------------------------------------------------------------* 00112
*        THIS SECTION SEARCHES THE INPUT FOR ++PTF AND ++VER          * 00113
*        STATEMENTS ON THE PUT TAPE. ALL OTHERS ARE REJECTED,         * 00114
*        BUT A BAD PTF MIGHT CAUSE EXCESS SCANNING TO BE DONE.        * 00115
*---------------------------------------------------------------------* 00116
PX010    EQU   *                                                        00117
         BAL   R2,PXGET            LINK TO COMMON READ ROUTINE          00118
         CLC   0(2,R4),=C'++'      IS THIS AN SMP CONTROL CARD?         00119
         BNE   PX010               NO - BACK FOR ANOTHER                00120
         NI    COMNTFLG,COMJCLOF   AT THIS POINT, EITHER BEGINNING  SBG
*                                  OR ENDING OF JCLIN. TURN FLAG OFFSBG
         NI    COMNTFLG,COMIFOF    NO LONGER IN CONTROL OF LAST     SBG
*                                  ++IF CARD.                       SBG
         NI    COMNTFLG,COMVEROF   NO LONGER IN CONTROL OF THE      SBG
*                                  ++VER CARD.                      SBG
         LA    R4,2(R4)            YES - POINT PAST THE ++              00121
         SH    R3,=H'2'            DECREMENT LENGTH FOR LOOP            00122
PX015    EQU   *                                                        00123
         CLI   0(R4),C' '          ANYTHING HERE YET?                   00124
         BNE   PX020               YES - GO CHECK IT OUT                00125
         LA    R4,1(R4)            NO - THEN POINT TO NEXT POSITION     00126
         BCT   R3,PX015            LOOP DE LOOP                         00127
         BAL   R2,PXGET            WOOPS - OUT OF RECORD                00128
         B     PX015               BACK AGAIN WITH ANOTHER RECORD       00129
PX020    EQU   *                                                        00130
         CLC   0(3,R4),=C'PTF'     IS THIS A ++PTF CARD?                00131
         BE    PX100               YES - GO GETPTF NUMBER               00132
         CLC   0(4,R4),=C'APAR'    IS THIS A ++APAR CARD?           SBG 00131
         BE    PX101               YES - GO GET APAR NUMBER         SBG 00132
         CLC   0(7,R4),=C'USERMOD' IS THIS A ++USERMOD CARD?        SBG 00131
         BE    PX102               YES - GO GET USERMOD NUMBER      SBG 00132
         CLC   0(8,R4),=C'FUNCTION' IS THIS A ++FUNCTION CARD?      SBG 00131
         BE    PX103               YES - GO GET FUNCTION NUMBER     SBG 00132
         CLC   0(3,R4),=C'VER'     NO - THEN IS IT A ++VER?             00133
         BE    PX200               YES - THEN GO FIND THE FMID          00134
         CLC   0(5,R4),=C'JCLIN'   IS THIS A ++JCLIN CARD?          SBG 00131
         BE    PX170               YES - GO SET JCLIN ON FLAG       SBG 00132
         B     PX010               NO - THEN THIS IS NG - START OVER.   00135
         EJECT                                                          00136
*---------------------------------------------------------------------* 00137
*        THIS SECTION GETS THE PTF NUMBER FROM THE SMP CONTROL        * 00138
*        CARDS. IT ASSUMES THIS TO BE THE FIRST NON-BLANK             * 00139
*        CHARACTER AFTER THE FIRST LEFT PAREN AFTER                   * 00140
*        THE KEYWORD 'PTF'                                            * 00141
*---------------------------------------------------------------------* 00142
PX100    EQU   *                                                        00143
         LA    R4,3(R4)            BUMP PAST PTF KEYWORD                00144
         SH    R3,=H'3'            DECREMENT LOOP CONTROL               00145
         C     R3,=F'0'            OUT OF RECORD?                       00146
         BH    PX110               NO - ON WITH THE SHOW                00147
         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE     00148
         B     PX110               KEEP GOING                       SBG
PX101    EQU   *                                                        00143
         LA    R4,4(R4)            BUMP PAST APAR KEYWORD           SBG 00144
         SH    R3,=H'4'            DECREMENT LOOP CONTROL           SBG 00145
         C     R3,=F'0'            OUT OF RECORD?                   SBG 00146
         BH    PX110               NO - ON WITH THE SHOW            SBG 00147
         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG 00148
         B     PX110               KEEP GOING                       SBG
PX102    EQU   *                                                        00143
         LA    R4,7(R4)            BUMP PAST USERMOD KEYWORD        SBG 00144
         SH    R3,=H'7'            DECREMENT LOOP CONTROL           SBG 00145
         C     R3,=F'0'            OUT OF RECORD?                   SBG 00146
         BH    PX110               NO - ON WITH THE SHOW            SBG 00147
         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG 00148
         B     PX110               KEEP GOING                       SBG
PX103    EQU   *                                                        00143
         LA    R4,8(R4)            BUMP PAST FUNCTION KEYWORD       SBG 00144
         SH    R3,=H'8'            DECREMENT LOOP CONTROL           SBG 00145
         C     R3,=F'0'            OUT OF RECORD?                   SBG 00146
         BH    PX110               NO - ON WITH THE SHOW            SBG 00147
         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG 00148
PX110    EQU   *                                                        00149
         CLI   0(R4),C'('          THIS A LEFT PAREN?                   00150
         BE    PX150               YES - THEN GO SAVE PTF NUMBER        00151
         LA    R4,1(R4)            NO - POINT TO NEXT POSITION          00152
         BCT   R3,PX110            LOOP AGAIN                           00153
         BAL   R2,PXGET            OUT OF RECORD AGAIN                  00154
         B     PX110                                                    00155
PX150    EQU   *                                                        00156
         LA    R4,1(R4)            POINT PAST LEFT PAREN                00157
         BCTR  R3,0                DECREMENT FOR THE PAREN              00158
         CLI   0(R4),C' '          ANYTHING HERE?                       00159
         BNE   PX160               YES - THEN GO SAVE IT                00160
         LA    R4,1(R4)            NO - POINT TO NEXT                   00161
         BCT   R3,PX150             AND LOOP (GETTING DIZZY YET?)       00162
         BAL   R2,PXGET            OFF TO THE COMMONS AGAIN             00163
         B     PX150                                                    00164
PX160    EQU   *                                                        00165
         MVC   OUTPTF(8),BLANKS    CLEAR AREA                           00166
         MVC   OUTPTF(7),0(R4)     SAVE PTF NUMBER                      00166
         B     PX010               BACK TO FIND THE FMID                00167
PX170    DS    0H                  GET HERE ONLY IF ++JCLIN CARD    SBG
         OI    COMNTFLG,COMJCLON   FLAG THAT WE'RE IN JCLIN         SBG
         NI    COMNTFLG,COMENTOF   TURN OFF COMMENT FLAG INITIALLY  SBG
         B     PX010               NOT INTERESTED IN ANY OTHER FACT SBG
         EJECT                                                          00168
*---------------------------------------------------------------------* 00169
*        THIS SECTION GETS THE FMID FROM THE ++VER STATEMENT. IT      * 00170
*        ASSUMES THE FMID TO BE THE FIRST NON-BLANK CHARACTER         * 00171
*        AFTER THE FIRST LEFT PAREN AFTER THE 'FMID' KEYWORD.         * 00172
*        WHEN THIS IS LOCATED, A RECORD IS WRITTEN TO THE SORT FILE.  * 00173
*---------------------------------------------------------------------* 00174
PX200    OI    COMNTFLG,COMVERON   FLAG THAT WE ARE INSIDE OF ++VER SBG 00175
         LA    R4,3(R4)            POINT PAST THE VER KEYWORD           00176
         SH    R3,=H'3'            AND DECREMENT THE LOOP CONTROL       00177
         C     R3,=F'0'            OUT OF RECORD?                       00178
         BH    PX210               NO - ON WITH THE SHOW                00179
         BAL   R2,PXGET            YES - OFF AND GET ANOTHER            00180
******************************************************************  SBG
*  AT THIS POINT IF YOU'RE LOOKING AT A FUNCTION SYSMOD, IT MAY     SBG
*   OR MAY NOT BE A DEPENDENT FMID.  IF IT ISN'T DEPENDENT AND SO   SBG
*   HAS NO FMID KEYWORD IN IT, WE WANT TO PREVENT THE PROGRAM       SBG
*   FROM LOOPING INTO THE NEXT SYSMOD ON THE FILE WHICH HAS AN      SBG
*   FMID KEYWORD.  WE THEREFORE TEST AT THIS POINT FOR ++PTF,ETC.   SBG
*   AND INITIALIZE PROCESSING IF FOUND.                             SBG
*                                                                   SBG
*  WE BREAK INTO THE LOOP AFTER THE PXGET, AND TEST FOR ++ ETC.     SBG
******************************************************************  SBG
PX210    EQU   *                                                        00181
         BAL   R2,COMMTEST         DETERMINE IF WE'RE IN A COMMENT  SBG
*-----------------------------------------------------------------  SBG
*  FIRST TEST IS FOR SAFETY ONLY. DON'T LOOK FOR FMID KEYWORD       SBG
*  INSIDE OF JCLIN OR ++IF OR IN A COMMENT AREA.                    SBG
*-----------------------------------------------------------------  SBG
         TM    COMNTFLG,COMENTON+COMIFON+COMJCLON                   SBG
*               ARE WE IN A COMMENT OR A ++IF OR INSIDE OF JCLIN ?  SBG
*               FMID KEYWORD IS NO GOOD IN ANY OF THESE 3 CASES.    SBG
         BNZ   PX210B              WE ARE. DON'T LOOK FOR FMID.     SBG
*-----------------------------------------------------------------  SBG
*  THIS IS THE LEGITIMATE TEST FOR FMID KEYWORD.  IT MUST LIE       SBG
*  WITHIN THE ++VER MODIFICATION CONTROL STATEMENT.                 SBG
*-----------------------------------------------------------------  SBG
         BAL   R2,VERTEST          TEST FOR PERIOD ENDING ++VER.    SBG
         TM    COMNTFLG,COMVERON   ARE WE STILL WITHIN ++VER STMT?  SBG
         BZ    PX210B              NO, FMID NOT LEGITIMATE KEYWORD  SBG
         CLC   0(4,R4),=C'FMID'    IS THIS THE FMID?                    00182
         BE    PX220               YES - THEN GO FIND THE ACTUAL FMID   00183
PX210B   DS    0H                  JUST BUMP IF INVALID FMID KEYWD  SBG
         LA    R4,1(R4)            NO - POINT TO NEXT LITTLE DEVIL      00184
         BCT   R3,PX210            WE'LL GET HIM YET                    00185
PX211    BAL   R2,PXGET            WOOPS OUT OF DATA                SBG 00186
*************  BREAK IN *****************************************   SBG
         CLC   0(2,R4),=C'++'      IS THIS AN SMP CONTROL CARD?     SBG 00119
         BNE   PX210               NO. STILL IN THIS SYSMOD.        SBG 00120
******    WE HAVE A ++ CARD.  DO WE REINITIALIZE OR NOT?   ******   SBG
         NI    COMNTFLG,COMJCLOF   NO LONGER IN PREVIOUS ++JCLIN    SBG
         NI    COMNTFLG,COMIFOF    NO LONGER IN PREVIOUS ++IF       SBG
         NI    COMNTFLG,COMVEROF   NO LONGER IN PREVIOUS ++VER      SBG
         LA    R4,2(R4)            YES - POINT PAST THE ++          SBG 00121
         SH    R3,=H'2'            DECREMENT LENGTH FOR LOOP        SBG 00122
PX212    EQU   *                                                    SBG 00123
         CLI   0(R4),C' '          ANYTHING HERE YET?               SBG 00124
         BNE   PX215               YES - GO CHECK IT OUT            SBG 00125
         LA    R4,1(R4)            NO - THEN POINT TO NEXT POSITION SBG 00126
         BCT   R3,PX212            LOOP DE LOOP                     SBG 00127
         BAL   R2,PXGET            END OF CARD IS ALL BLANKS        SBG 00128
         B     PX212               BACK AGAIN WITH ANOTHER RECORD   SBG 00129
PX215    EQU   *                                                    SBG 00130
*   IF WE GET A HIT HERE, WE'RE IN THE NEXT SYSMOD, SO GO BACK.     SBG
         CLC   0(3,R4),=C'PTF'     IS THIS A ++PTF CARD?            SBG 00131
         BE    PX100               YES - GO GET PTF NUMBER          SBG 00132
         CLC   0(4,R4),=C'APAR'    IS THIS A ++APAR CARD?           SBG 00131
         BE    PX101               YES - GO GET APAR NUMBER         SBG 00132
         CLC   0(7,R4),=C'USERMOD' IS THIS A ++USERMOD CARD?        SBG 00131
         BE    PX102               YES - GO GET USERMOD NUMBER      SBG 00132
         CLC   0(8,R4),=C'FUNCTION' IS THIS A ++FUNCTION CARD?      SBG 00131
         BE    PX103               YES - GO GET FUNCTION NUMBER     SBG 00132
         CLC   0(5,R4),=C'JCLIN'   IS THIS A ++JCLIN CARD?          SBG 00131
         BE    PX170               YES - GO SET JCLIN ON FLAG       SBG 00132
         CLC   0(2,R4),=C'IF'      IS THIS A ++IF CARD?             SBG 00131
         BE    PX217     YES - DON'T LOOK FOR FMID - YOU'RE FOOLED  SBG 00132
         B     PX210               NO HIT, ++ IS IN THIS SYSMOD     SBG 00187
PX217    OI    COMNTFLG,COMIFON    UNDER ++IF, FMID KEYWORD IS WRONGSBG
         B     PX211               LOOK FURTHER. THIS LINE HAS      SBG
*                                  NO VALID FMID KEYWORD.           SBG
*************  BREAK IN *****************************************   SBG
PX220    EQU   *                                                        00188
         LA    R4,4(R4)            POINT PAST THE KEYWORD               00189
         SH    R3,=H'4'            DECREMENT THE LOOP CONTROL           00190
         C     R3,=F'0'            OUT OF DATA?                         00191
         BH    PX230               NO - THEN FIND THE LITTLE DEVIL      00192
         BAL   R2,PXGET            OUT OF DATA AGAIN                    00193
PX230    EQU   *                                                        00194
         BAL   R2,COMMTEST         DETERMINE IF PAREN IS IN COMMENT SBG
         TM    COMNTFLG,COMENTON   IF IT IS A COMMENT, IGNORE IT    SBG
         BO    PX230A              COMMENT. PAREN IS NOT REAL.      SBG
         CLI   0(R4),C'('          LEFT PAREN YET?                      00195
         BE    PX235               YES - ALMOST THERE               SBG 00196
PX230A   DS    0H                  IF COMMENT, JUST KEEP BUMPING.   SBG
         LA    R4,1(R4)            POINT TO NEXT PLACE                  00197
         BCT   R3,PX230            LOOP DE LOOP                         00198
         BAL   R2,PXGET            WOOPS - THE SAFTEY VALVE AGAIN       00199
         B     PX230               KEEP ON PLUGGIN.                     00200
PX235    LA    R4,1(,R4)           BUMP FOR INITIAL FMID NUMBER TRY SBG
         BCTR  R3,0                LOOP CONTROL FOR INITIAL TRY     SBG
         BAL   R2,COMMTEST         SEE IF COMMENT IS AFTER FMID(    SBG
         TM    COMNTFLG,COMENTON   IF WE HAVE COMMENT, MUST GO ON   SBG
         BO    PX235A              COMMENT. NOT LEGIT FMID NUMBER.  SBG
         CLI   0(R4),C' '          IS FIRST CHARACTER A BLANK ?     SBG
         BNE   PX250               NOPE. ASSUME WE'VE GOT THE FMID. SBG
PX235A   B     PX240               GO TO LOOP RTN TO FIND 1ST NONBLKSBG
PX240    EQU   *                                                        00201
         LA    R4,1(R4)            POINT PAST THE PAREN                 00202
         BAL   R2,COMMTEST         SEE IF COMMENT IS AFTER 'FMID( ' SBG
         TM    COMNTFLG,COMENTON   IF WE HAVE COMMENT, MUST GO ON   SBG
         BO    PX240A              COMMENT. NOT LEGIT FMID NUMBER.  SBG
******   BCTR  R3,0     ********   COMMENT OUT INSTRUCTION IN ERROR SBG 00203
         CLI   0(R4),C' '          THEY DIDN'T SLIP IN ANOTHER BLANK?   00204
         BNE   PX250               NOPE - THEN WE GOT IT ALL!!!!        00205
******   LA    R4,1(R4) ********   COMMENT OUT INSTRUCTION IN ERROR SBG 00206
PX240A   BCT   R3,PX240            LOOP ONE MORE TIME                   00207
         BAL   R2,PXGET            COMMONER AND COMMONER                00208
         B     PX240                                                    00209
PX250    EQU   *                                                        00210
         MVC   OUTFMID,0(R4)       SAVE THE FMID NUMBER                 00211
         PUT   SORT,OUTPTF         WRITE THE RECORD                     00212
         B     PX010               BACK AND START AGAIN                 00213
               EJECT                                                    00214
*---------------------------------------------------------------------* 00215
*        END OF DATA ROUTINE FOR THE PTF INPUT FILE  - DDNAME         * 00216
*        IS INPUT.                                                    * 00217
*---------------------------------------------------------------------* 00218
EOF      EQU   *                                                        00219
         CLOSE SYSIN                                                    00220
         CLOSE SORT                                                     00221
         SPACE 3                                                        00222
*---------------------------------------------------------------------* 00223
*        LINK TO SORT (THIS WAS DEVELOPED USING SYNCSORT)             * 00224
*---------------------------------------------------------------------* 00225
         LA    R1,SORTPARM         GET ADDRESS OF SORT PARMS            00226
         LINK  EP=SORT             CALL THE SORT UTILITY                00227
         LTR   R15,R15             CHECK RETURN CODE                    00228
         BNZ   SORTERR             NO GOOD - ABEND                      00229
         EJECT                                                          00230
*---------------------------------------------------------------------* 00231
*        THIS IS THE BEGINNING OF PHASE 2 - SETS UP THE               * 00232
*        FILES, VERIFIES THE EXSISTANCE OF THE TITLES FILE, AND       * 00233
*        WRITES THE FIRST SET OF HEADERS                              * 00234
*---------------------------------------------------------------------* 00235
         OPEN  (SORT,INPUT)                                             00236
         OPEN  (TITLE,INPUT)                                            00237
         OPEN  (PRINT,OUTPUT)                                           00238
         TM    FLAGSMPC,X'01'      IS SMPCOUT DDNAME THERE?
         BZ    NOSMPC1             NO. SKIP ITS OPEN.
         OPEN  (SMPCOUT,OUTPUT)                                         00238
NOSMPC1  DS    0H
         TM    FLAGSMPC,X'02'
         BZ    NOPDSA1
         OPEN  (PDSATOUT,OUTPUT)
NOPDSA1  DS    0H
         LA    R5,TITLE            GET DCB ADDRESS                      00239
         TM    48(R5),X'10'        WAS OPEN SUCCESSFUL?                 00240
         BO    PX490               YES - BRANCH AROUND BAD OPEN         00241
         OI    FLAG,NOTITLE        SHOW NOT TO READ THIS FILE           00242
         WTO   'TITLE FILE OPEN UNSUCCESSFUL',ROUTCDE=(11),            X00243
               DESC=(7)                                                 00244
PX490    EQU   *                                                        00245
         BAL   R2,PXPUT            LINK TO HEADER PUT ROUTINE           00246
         EJECT                                                          00247
*---------------------------------------------------------------------* 00248
*        THIS SECTION FOOLS AROUND WITH THE SPECIAL HANDLING FOR      * 00249
*        THE 1ST RECORD.                                              * 00250
*---------------------------------------------------------------------* 00251
         GET   SORT,OUTSORT        1ST READ ONLY                        00252
         MVC   HOLDOUTS(15),OUTSORT   SAVE FMID AND PTF FOR COMPARISON  00253
         BAL   R8,UPDTEOUT          PUT IEBUPDTE ./ ADD CARD OUT
         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE                      00254
         LA    R5,OUTAREA+11       POINT TO FIRST PTF AREA              00255
         LA    R6,12               SET UP LOOP FOR BCT                  00256
         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?          00257
         BO    PX510               NO - WOOPS - FORGOT TO SAY           00258
*                                         MOTHER MAY I                  00259
         LA    R7,PX499            SAVE RETURN POINT FOR EODAD          00260
PX495    EQU   *                                                        00261
         GET   TITLE,INAREA        GET A TITLE RECORD                   00262
         CLC   INAREA+2(7),HOLDFMID  DO FMID'S AGREE?                   00263
         BL    PX495               NO - LOWER, GO READ ANOTHER          00264
         BH    PX499               NO - HIGHER, ERGO NO BRANCH, SKIP    00265
         MVC   OUTAREA+21(40),INAREA+11 EQUAL - GET TITLE               00266
PX499    EQU   *                                                        00267
         PUT   PRINT,LINE          WRITE HEADER                         00268
         MVI   OUTAREA+0,C' '      CLEAR LINE                           00269
         MVC   OUTAREA+1(131),OUTAREA+0                                 00270
         AP    LINECNT,ONE         UPDATE LINE COUNT                    00271
*                       NOTE - PAGE OVERFLOW NOT POSSIBLE HERE          00272
         B     PX510               BRANCH AROUND NORMAL READ            00273
         EJECT                                                          00274
*---------------------------------------------------------------------* 00275
*        THIS IS THE MAINLINE ROUTINE TO PRINT OUT THE CROSS          * 00276
*        REFERENCE. IT READS THE SORTED INPUT, CHECKS TO SEE          * 00277
*        IF IT IS THE SAME AS THE PREVIOUS FMID, AND BRANCHES         * 00278
*        ACCORDINGLY.                                                 * 00279
*---------------------------------------------------------------------* 00280
PX500    EQU   *                                                        00281
         GET   SORT,OUTSORT        NORMAL READ                          00282
PX510    EQU   *                                                        00283
         BAL   R8,PDSAWOUT         PUT SMPCOUT SYSMOD LINE
         BAL   R8,WRITEOUT         PUT SMPCOUT SYSMOD LINE
         CLC   HOLDFMID,OUTFMID    SAME AS LAST RECORD?                 00284
         BNE   PX570               NO - GO WRITE PARTIAL LINE           00285
PX520    EQU   *                                                        00286
         MVC   0(7,R5),OUTPTF      MOVE IN PTF NUMBER                   00287
         LA    R5,10(R5)           BUMP TO NEXT PRINT POSITION          00288
         BAL   R8,PDSAWOUT         PUT SMPCOUT SYSMOD LINE
         BAL   R8,WRITEOUT         WRITE SMPCOUT SYSMOD RECORD
         BCT   R6,PX500            LOOP IN HERE TOO.                    00289
         PUT   PRINT,LINE          END OF LOOP, WRITE LINE              00290
         MVI   OUTAREA+0,C' '      BLANK OUT THE LINE                   00291
         MVC   OUTAREA+1(131),OUTAREA CLEAR DATA LINE                   00292
         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING              00293
         LA    R6,12               RESET LOOP CONTROL                   00294
         AP    LINECNT,ONE         ADD ONE TO CURRENT NUMBER OF LINES   00295
         CP    LINECNT,=P'&LINEPPG'  ENOUGH LINES FOR BREAK?            00296
         BL    PX500               NO - BACK TO TOP                     00297
         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE     00298
         B     PX500               BACK TO TOP                          00299
         SPACE 2                                                        00300
PX570    EQU   *                                                        00301
         PUT   PRINT,LINE          WRITE SHORT LINE                     00302
         PUT   PRINT,BLANK         WRITE SPACER                         00303
         AP    LINECNT,THREE       ADD IN LINE COUNT                    00304
         CP    LINECNT,=P'&LINELES'  ALMOST AT END OF PAGE?             00305
         BL    PX572               NO - BRANCH AROUND HDR ROUTINE       00306
         BAL   R2,PXPUT            OFF TO SEE THE WIZARD                00307
PX572    EQU   *                                                        00308
         LA    R5,11(R5)           RESET POINTER                        00309
         LA    R6,12               RESET BCT LOOP                       00310
         MVI   OUTAREA+0,C' '      CLEAR OUTPUT                         00311
         MVC   OUTAREA+1(131),OUTAREA                                   00312
         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE                      00313
         MVC   HOLDFMID,OUTFMID    SAVE NEW FMID                        00314
         BAL   R8,UPDTEOUT         PUT SMPCOUT ./ ADD NAME= LINE
         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?          00315
         BO    PX580               NO - FORGET THIS NONSENSE            00316
         LA    R7,PX580            YES - GET RETURN ADDRESS FOR EODAD   00317
         CLC   INAREA+2(7),HOLDFMID  CURRENT ONE RIGHT?                 00318
         BL    PX575               NO - LOW, GO GET NEXT ONE            00319
         BH    PX580               NO - HIGH, STILL NOT RIGHT           00320
         MVC   OUTAREA+21(40),INAREA+11   YES - THIS IS RIGHT ONE       00321
         B     PX580               GO DIRECTLY TO PUT                   00322
PX575    EQU   *                                                        00323
         GET   TITLE,INAREA        READ THE FILE                        00324
         CLC   INAREA+2(7),HOLDFMID  THIS THE RIGHT GUY?                00325
         BL    PX575               NO - LOW, GO BACK AND READ AGAIN     00326
         BH    PX580               NO - HIGH, NONE FOR THIS ONEADDRESS  00327
         MVC   OUTAREA+21(40),INAREA+11  MOVE IN TITLE                  00328
PX580    EQU   *                                                        00329
         PUT   PRINT,LINE          WRITE DATA                           00330
         BAL   R8,PDSAWOUT         PUT SMPCOUT SYSMOD LINE
         BAL   R8,WRITEOUT         PUT SMPCOUT SYSMOD LINE
         MVI   OUTAREA+0,C' '      CLEAR OUTPUT                         00331
         MVC   OUTAREA+1(131),OUTAREA                                   00332
         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING              00333
         LA    R6,12               RESET LOOP CONTROL                   00334
         AP    LINECNT,ONE         ADD TO CURRENT LINE COUNTER          00335
         CP    LINECNT,=P'&LINEPPG'   ENOUGH FOR A NEW PAGE?            00336
         BL    PX520               NO - BACK TO PROCESS NEW FMID        00337
         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE     00338
         B     PX520               BACK AND CONTINUE ON                 00339
         EJECT                                                          00340
*---------------------------------------------------------------------* 00341
*        EODAD ROUTINE FOR THE TITLE FILE. SINCE THIS CAN BE ENTERED  * 00342
*        FROM TWO PLACES, EACH SETS A RETURN ADDRESS, SO THAT         * 00343
*        PROCESSING CAN CONTINUE AFTER EOF IS REACHED.                * 00344
*---------------------------------------------------------------------* 00345
PX590    EQU   *                                                        00346
         OI    FLAG,NOTITLE        SHOW NO MORE READS TO BE DONE        00347
         BR    R7                  RETURN VIA PRESET REG 7              00348
         SPACE 3                                                        00349
*---------------------------------------------------------------------* 00350
*        EODAD FOR THE SORT FILE OUTPUT. WHEN YOU GET HERE ITS OVER.  * 00351
*---------------------------------------------------------------------* 00352
PX599    EQU   *                                                        00353
         OI    FINALFLG,X'01'      FORCE FINAL SMPCOUT SYSMOD LINE
         PUT   PRINT,LINE          END OF LOOP, WRITE LINE              00354
         BAL   R8,PDSAWOUT         PUT SMPCOUT SYSMOD LINE
         BAL   R8,WRITEOUT         PRODUCE FINAL SMPCOUT SYSMOD LINE
         CLOSE SORT                                                     00355
         CLOSE PRINT                                                    00356
         TM    FLAGSMPC,X'01'      IS SMPCOUT DDNAME THERE?
         BZ    NOSMPC2             NO. SKIP CLOSE. NEVER OPENED.
         CLOSE SMPCOUT
NOSMPC2  DS    0H
         TM    FLAGSMPC,X'02'      IS PDSATOUT DDNAME THERE?
         BZ    NOPDSA2             NO. SKIP CLOSE. NEVER OPENED.
         CLOSE PDSATOUT
NOPDSA2  DS    0H
         L     R13,SAVE+4                                               00357
         LM    R14,R12,12(R13)                                          00358
         SR    R15,R15                                                  00359
         BR    R14                                                      00360
         EJECT                                                          00361
*---------------------------------------------------------------------* 00362
*        THIS IS THE COMMON READ ROUTINE FOR THE INPUT PTF FILE       * 00363
*        USED DURING PHASE ONE PROCESSING.                            * 00364
*---------------------------------------------------------------------* 00365
PXGET    EQU   *                   COMMON READ ROUTINE FOR SYSIN        00366
         GET   SYSIN,INAREA                                             00367
         LA    R3,72               SET UP REG 3 FOR BCT                 00368
         LA    R4,INAREA           POINT TO DATA                        00369
         BR    R2                  RETURN TO CALLER                     00370
         SPACE 2                                                        00371
*-------------------------------------------------------------------SBG 00362
*        ROUTINE TO DETERMINE IF WE ARE INSIDE OF AN SMP COMMENT.   SBG 00363
*        IF WE ARE, COMNTFLG IS ON AND IF */ OCCURS, TURN IT OFF.   SBG 00364
*-------------------------------------------------------------------SBG 00365
COMMTEST TM    COMNTFLG,COMJCLON   IS THIS INSIDE OF JCLIN?         SBG 00366
         BO    COMMOFF             YES. /* CAN BE PART OF JCL.      SBG 00367
         TM    COMNTFLG,COMENTON   ARE WE ALREADY INSIDE A COMMENT? SBG 00366
         BO    CENDTEST            YES. SEE IF WE'RE ENDING IT NOW. SBG 00367
         CLC   0(2,R4),COMSTART    COMPARE FOR START OF A COMMENT   SBG 00366
         BNE   CENDTEST            NO. TEST FOR END OF COMMENT      SBG 00367
         OI    COMNTFLG,COMENTON   FORCE FLAG ON. WE'RE IN COMMENT  SBG 00368
         B     COMTEND             WE TURNED IT ON.  ENOUGH --      SBG
CENDTEST TM    COMNTFLG,COMENTON   ARE WE ALREADY IN A COMMENT?     SBG 00366
         BZ    COMTEND             NO. THEREFORE CAN'T END COMMENT. SBG
         CLC   0(2,R4),COMMEND     COMPARE FOR END OF A COMMENT     SBG 00366
         BNE   COMTEND             NO CHANGE IN STATUS.  EXIT.      SBG
COMMOFF  NI    COMNTFLG,COMENTOF   SIGNAL THE END OF THE COMMENT    SBG
COMTEND  BR    R2                  RETURN TO CALLER                 SBG 00370
         SPACE 2                                                    SBG 00371
*-------------------------------------------------------------------SBG 00362
*        ROUTINE TO FIND LEGITIMATE PERIOD WHICH ENDS AN            SBG 00363
*        SMP STATEMENT.  THIS SHOULD BE FIRST PERIOD WHICH          SBG 00364
*        DOES NOT LIE WITHIN A COMMENT.                             SBG 00364
*-------------------------------------------------------------------SBG 00365
*        NOTE THAT COMMTEST MUST BE DONE BEFORE THIS ROUTINE.       SBG
VERTEST  TM    COMNTFLG,COMENTON   ARE WE INSIDE A COMMENT ?        SBG
         BO    VEREND              YES-THE PERIOD DONT MEAN NOTHIN  SBG
         CLI   0(R4),C'.'          THIS PERIOD IS LEGIT ?           SBG
         BNE   VEREND              NOT A PERIOD. GET OUT.           SBG
         NI    COMNTFLG,COMVEROF   YES. MARK THE ++VER AS FINISHED  SBG
VEREND   BR    R2                  BACK TO CALLER                   SBG
         SPACE 2                                                    SBG 00371
*---------------------------------------------------------------------* 00372
*        THIS IS THE COMMON HEADER WRITTING ROUTINE.                  * 00373
*---------------------------------------------------------------------* 00374
PXPUT    EQU   *                                                        00375
         AP    PAGE,ONE            ADD TO PAGE NUMBER                   00376
         MVC   NUM,PATRN           INSERT EDIT PATTERN                  00377
         ED    NUM,PAGE            MAKE THE NUMBER PRINTABLE            00378
         PUT   PRINT,HDR1                                               00379
         PUT   PRINT,HDR2                                               00380
         PUT   PRINT,HDR3                                               00381
         ZAP   LINECNT,FOUR        RESET PAGE LINE COUNTER              00382
         BR    R2                  RETURN TO CALLER                     00383
         SPACE 2                                                        00384
*---------------------------------------------------------------------* 00372
*        THIS IS THE SMPCOUT ./ ADD WRITING ROUTINE.                  * 00373
*---------------------------------------------------------------------* 00374
UPDTEOUT DS    0H                     WRITE SMPCOUT ./ ADD NAME= LINE
         TM    FLAGSMPC,X'01'         IS SMPCOUT DDNAME THERE?
         BZ    UPDTEOUE               NO. ENTIRE ROUTINE IS A NOP.
         MVC   UPDTELIN,UPDTELIN-1    CLEAR OUTPUT AREA.
         MVC   UPDTELT(14),UPDTELIT   MOVE IN LITERAL
         MVC   UPDTENAM(7),OUTFMID    MOVE IN FMID NAME
         PUT   SMPCOUT,UPDTELIN
UPDTEOUE BR    R8                     BACK TO CALLER
*---------------------------------------------------------------------* 00372
*        THIS IS THE PDSATOUT PTF RECORD WRITING ROUTINE.             * 00373
*---------------------------------------------------------------------* 00374
*
*   THIS ROUTINE MUST BE EXECUTED RIGHT BEFORE EACH   BAL R8,WRITEOUT
*        BECAUSE OF THE WRITEOMV, WHICH CAN'T BE DONE TWICE.
*
PDSAWOUT DS    0H                     WRITE PDSATOUT SYSMOD LINE
         TM    FLAGSMPC,X'02'         IS PDSATOUT DDNAME THERE?
         BZ    PDSAWOUE               NO. ENTIRE ROUTINE IS A NOP.
         TM    FINALFLG,X'01'         ARE WE AT END OF SORT?
         BO    PDSAWOGO               YES-UNCONDITIONALLY WRITE OUTPUT
         CLC   HOLDPTF(7),OUTPTF          IS THIS THE SAME PTF AS LAST
         BE    PDSAWOUE                   YES, DON'T WRITE ANYTHING
PDSAWOGO MVC   PDSARECD,PDSARECD-1          CLEAR OUTPUT LINE
         MVC   PDSALIT1(7),PDSLATTR
         MVC   PDSAPTF(7),HOLDPTF
         MVC   PDSALIT2(9),PDSLADDS
         MVC   PDSALIT3(3),PDSLID
         MVC   PDSAFMID(7),HOLDFMID
         MVI   PDSALIT4,C')'
         PUT   PDSATOUT,PDSARECD
PDSAWOUE BR    R8                     BACK TO CALLER
*---------------------------------------------------------------------* 00372
*        THIS IS THE SMPCOUT PTF RECORD WRITING ROUTINE.              * 00373
*---------------------------------------------------------------------* 00374
WRITEOUT DS    0H                     WRITE SMPCOUT SYSMOD LINE
         TM    FLAGSMPC,X'01'         IS SMPCOUT DDNAME THERE?
         BZ    WRITEOUE               NO. ENTIRE ROUTINE IS A NOP.
         TM    FINALFLG,X'01'         ARE WE AT END OF SORT?
         BO    WRITEOGO               YES-UNCONDITIONALLY WRITE OUTPUT
         CLC   HOLDPTF(7),OUTPTF          IS THIS THE SAME PTF AS LAST
         BE    WRITEOUE                   YES, DON'T WRITE ANYTHING
WRITEOGO MVC   OUTRECD,OUTRECD-1          CLEAR OUTPUT LINE
         MVC   OUTPTFO(7),HOLDPTF         MOVE IN PTF NAME
         MVC   OUTSLAST,SLAST             MOVE IN /*
         MVC   OUTFLITR,FLITR             MOVE IN LITERAL
         MVC   OUTFMIDO,HOLDFMID          MOVE IN FMID
         MVC   OUTFLIT2,FLIT2             MOVE IN LITERAL
         MVC   OUTDATE(8),HEADDAY         MOVE IN DATE
         MVC   OUTASTSL,ASTSL             MOVE IN */
         PUT   SMPCOUT,OUTRECD
WRITEOMV MVC   HOLDPTF(7),OUTPTF          STORE THIS PTF NAME FOR NEXT
WRITEOUE BR    R8
*---------------------------------------------------------------------* 00385
*        IF THE SORT RETURNS A NON-ZERO CONDITION CODE,               * 00386
*        CONTROL IS PASSED TO THIS ABEND MACRO.                       * 00387
*---------------------------------------------------------------------* 00388
SORTERR  EQU   *                                                        00389
         ABEND 128,DUMP                                                 00390
         EJECT                                                          00391
         LTORG                                                          00392
         EJECT                                                          00393
SYSIN    DCB   DSORG=PS,MACRF=GM,EODAD=EOF,DDNAME=INPUT,RECFM=FB,      X00394
               LRECL=80                                                 00395
         EJECT                                                          00396
SMPCOUT  DCB   DSORG=PS,MACRF=PM,DDNAME=SMPCOUT,RECFM=FB,LRECL=80       00394
         EJECT                                                          00396
PDSATOUT DCB   DSORG=PS,MACRF=PM,DDNAME=PDSATOUT,RECFM=FB,LRECL=80      00394
         EJECT                                                          00396
SORT     DCB   DSORG=PS,MACRF=(PM,GM),DDNAME=SORTIN,RECFM=FB,LRECL=15, X00397
               BLKSIZE=1500,EODAD=PX599                                 00398
         EJECT                                                          00399
PRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=PRINTER,RECFM=FBA,LRECL=133     00400
         EJECT                                                          00402
TITLE    DCB   DSORG=PS,MACRF=GM,DDNAME=TITLES,RECFM=FB,               X00403
               LRECL=80,EODAD=PX590                                     00404
         EJECT                                                          00405
PDSLATTR DC    CL7'ATTRIB '
PDSLADDS DC    CL9'ADDSTATS '
PDSLID   DC    CL3'ID('
PDSLCLOS DC    CL1')'
UPDTELIT DC    C'./  ADD  NAME='
SLAST    DC    CL2'/*'
ASTSL    DC    CL2'*/'
FLITR    DC    CL7'FMID - '
FLIT2    DC    CL24' - FROM PUT TAPE - DONE '
HOLDOUTS DS      0CL15            HOLD AREA FOR PREVIOUS SORT OUTPUT
HOLDPTF  DC      CL8' '           PREVIOUS PTF NAME
HOLDFMID DC      CL7' '           PREVIOUS FMID NAME                    00407
         DC      CL8' '
BLANKS   DC      CL8' '                                             SBG 00418
PAGE     DC      PL2'0'                                                 00408
LINECNT  DC      PL2'0'                                                 00409
ONE      DC      PL1'1'                                                 00410
THREE    DC      PL1'3'                                                 00411
FOUR     DC      PL1'4'                                                 00412
FLAG     DC      XL1'00'                                                00413
FLAGSMPC DC      XL1'00'          X'01' SHOWS PRESENCE OF SMPCOUT DD    00413
*                                 X'02' SHOWS PRESENCE OF PDSATOUT DD
FINALFLG DC      XL1'00'          X'01' FORCES WRITEOUT TO ALWAYS WRITE 00413
NOTITLE  EQU     X'80'                                                  00414
COMNTFLG DC      XL1'00'          TEST IF WE'RE INSIDE A COMMENT    SBG
COMENTON EQU     X'01'            YES WE ARE.  IGNORE SMP KEYWORDS. SBG
COMENTOF EQU     X'FE'            NO WE AREN'T.  PROCESSING NORMAL. SBG
*                                 IF WE'RE INSIDE JCLIN, NOT COMMENTSBG
COMJCLON EQU     X'02'            YES WE ARE IN JCLIN. NOT A COMMENTSBG
COMJCLOF EQU     X'FD'            NO WE AREN'T. CAN BE A COMMENT.   SBG
COMIFON  EQU     X'04'         WE ARE IN A ++IF CARD. FMID NO GOOD. SBG
COMIFOF  EQU     X'FA'            WE AREN'T IN THE ++IF CARD NOW.   SBG
COMVERON EQU     X'80'            WE ARE LEGITIMATELY IN THE ++VER  SBG
COMVEROF EQU     X'7F'            WE ARE NOT IN ++VER LEGITIMATELY. SBG
COMSTART DC      CL2'/*'          BEGINNING OF A COMMENT            SBG
COMMEND  DC      CL2'*/'          END OF A COMMENT                  SBG
PATRN    DC      XL4'40202120'                                          00415
INAREA   DS      CL80                                                   00416
         DC      CL8' '
OUTSORT  DS      0CL15            INPUT AREA FOR SORT OUTPUT RECORD
OUTPTF   DC      CL8' '           SORT PTF NAME - 1ST 7 CHARACTERS      00417
OUTFMID  DC      CL7' '           SORT FMID NAME                        00418
         DS     0F                                                      00419
SORTPARM DC      X'80'                                                  00420
         DC      AL3(PARMLIST)                                          00421
         DC      H'0'                                                   00422
PARMLIST DC      AL2(PARMEND-PARMLIST)                                  00423
         DC      A(SORTCARD)                                            00424
         DC      A(SORTEND)                                             00425
         DC      A(RECCARD)                                             00426
         DC      A(RECEND)                                              00427
         DC      A(0)                                                   00428
         DC      A(0)                                                   00429
PARMEND  EQU   *                                                        00430
SORTCARD DC    C' SORT FIELDS=(9,7,CH,A,1,7,CH,A)'                      00431
SORTEND  DC    C' '                                                     00432
RECCARD  DC    C' RECORD LENGTH=15,TYPE=F'                              00433
RECEND   DC    C' '                                                     00434
HDR1     DC    CL1'1'                                                   00437
         DC    45CL1' '                                                 00438
         DC    C'SYSMOD BY FMID CROSS REFERENCE'                        00439
         DC    45CL1' '                                                 00440
         DC    CL4'PAGE'                                                00441
NUM      DC    CL4'    '                                                00442
         DC    CL4'    '                                                00442
HDR2     DC    CL1'0'                                                   00445
         DC    CL10'FMID'                                               00446
         DC    12CL10'SYSMOD'                                       SBG 00447
         DC    CL4'    '                                                00442
HDR3     DC    CL1' '                                                   00450
         DC    13CL10'*******'                                          00451
         DC    CL4'    '                                                00442
         DC    CL4' '
LINE     DS    0CL133                                                   00452
OUTAREA  DC    133CL1' '                                                00454
         DC    CL4' '
BLANK    DC    CL133' '                                                 00455
         DC    CL16' '
         EJECT                                                          00458
TIMED    DS    CL7                TIME AND DATE WORD FIELDS
DATED    DS    CL9
DATETIME DS    4F
         ORG   DATETIME
TIME     DS    CL4
         DS    CL4
DATE     DS    CL5
         DS    CL3
HEADDATE DC    CL23' '            MM/DD/YYYY  HH:MM:SS
HEADDAY  DC    CL8' '             MM/DD/YY
         DC    CL8' '
*  - - - - - - - - - - - - -      OUTPUTS FOR FORFMID SMPCNTL CARDS
         DC    C' '
UPDTELIN DS    0CL80              IEBUPDTE ADD CARD FOR SMPCOUT
UPDTELT  DC    CL14' '            ./  ADD  NAME= LITERAL
UPDTENAM DC    CL8' '             FMID NAME
UPDTERST DC    CL58' '
* ----                            END OF RECORD
         DC    CL8' '
OUTRECD  DS    0CL80              SYSMOD RECORD FOR SMPCOUT
OUTRSTRT DC    CL6' '             BLANKS
OUTPTFO  DC    CL7' '             PTF NAME
OUTFILL1 DC    CL2' '             BLANKS
OUTSLAST DC    CL2' '             /*
OUTFILL2 DC    CL2' '             BLANKS
OUTFLITR DC    CL7' '             LITERAL INDICATING FMID
OUTFMIDO DC    CL7' '             FMID NAME
OUTFLIT2 DC    CL24' '            LITERAL
OUTDATE  DC    CL10' '            DATE - 8 OR 10 CHARS DEPENDING...
OUTFILL3 DC    CL2' '             BLANKS
OUTASTSL DC    CL2' '             */
OUTFILL4 DC    CL9' '             BLANKS
* ----                            END OF RECORD
* ----                            END OF RECORD
         DC    CL8' '
PDSARECD DS    0CL80              SYSMOD RECORD FOR PDSATOUT
PDSASTRT DC    CL1' '             BLANKS
PDSALIT1 DC    CL7' '             ATTRIB COMMAND
PDSAPTF  DC    CL7' '             PTF NAME
PDSAFIL1 DC    CL1' '             BLANKS
PDSALIT2 DC    CL9' '             ADDSTATS KEYWORD
PDSAFIL2 DC    CL1' '             BLANKS
PDSALIT3 DC    CL3' '             ID(
PDSAFMID DC    CL7' '             FMID NAME
PDSALIT4 DC    CL1' '             )
PDSAFIL3 DC    CL43' '            BLANKS
         DC    CL8' '
         END                                                            00478
